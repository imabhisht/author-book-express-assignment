generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model author {
  id                   String                @id
  name                 String
  email                String                @unique
  phone_number         String                @unique
  created_at           DateTime              @default(now()) @db.Timestamptz(6)
  updated_at           DateTime              @default(now()) @db.Timestamptz(6)
  refresh_token_secret String                @unique
  access_token_secret  String                @unique
  password_hash        String
  books                books[]
  books_like_activity  books_like_activity[]
}

model books {
  id                  String                @id
  title               String
  likes               Decimal               @db.Decimal
  author_id           String
  created_at          DateTime              @default(now()) @db.Timestamptz(6)
  updated_at          DateTime              @default(now()) @db.Timestamptz(6)
  author              author                @relation(fields: [author_id], references: [id], onUpdate: Restrict)
  books_like_activity books_like_activity[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model books_like_activity {
  author_id  String
  book_id    String
  created_at DateTime @default(now()) @db.Timestamptz(6)
  author     author   @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  books      books    @relation(fields: [book_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([author_id, book_id])
}
